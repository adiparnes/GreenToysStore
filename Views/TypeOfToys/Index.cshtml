@model IEnumerable<GreenToys.Models.TypeOfToy>
@using GreenToys.Models


@{
    ViewBag.Title = "Index";
}
@{ 
    ApplicationDbContext db = new ApplicationDbContext();
    var toys = db.Toys.ToList();
   // var toyInDb = db.Toys.GroupBy(t => t.TypeOfToyID).ToList();
}
<h2 style="font-family:cursive;text-transform:capitalize;">Our Type of toys</h2>


<p>

    @*<h4>to create a new toy:&nbsp;</h4>
        @Html.ActionLink("click here", "Create")*@


    <!--partial create button-->
    @Html.Partial("_CreateButtonPartial")
    <br />
    <br />

</p>
<table class="table table-condensed table-hover">
    <tr class="table-header">
        <th>
            @Html.DisplayNameFor(m => m.Name)
        </th>
        <th>Aviability Quantity</th> 
        <th></th>
        <th></th><!--to extend the line above the three buttons (edit,detail...)-->
    </tr>
    <!--we want to run on every item in our model and desplay all the typeoftoy names here-->
    @foreach (var item in Model) 
    {
        int sum = 0;
        <tr>
            <td><!--groupig by name of toy and count the aviability of all the toys from this type of toy-->
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            @*<th>@Html.Display("Quantity")</th>*@   
            <td>
                @foreach (var toy in toys)
                {
                    if (item.TypeOfToyID == toy.TypeOfToyID)
                    {
                        sum += toy.Avaibility;
                    }
                }
                              
                @*@Html.Label("Quantity")*@
                @Html.DisplayFor(m=>sum)
            </td>
           
            <td>
                @Html.Partial("_EditDetailsDeleteButtonPartial",new IndividualButtonPartial {TypeOfToyID= item.TypeOfToyID})
            </td>
        </tr>
    }

</table>
<h5 style="font-family:cursive;text-transform:capitalize;">how many toys from all the types of toys are exist:</h5>
@{
    //var toys = db.Toys.ToList();
    var toyInDb = db.Toys.GroupBy(t => t.TypeOfToyID);
    foreach (var t in toyInDb)
    {

        <span>@t.Count()</span>
    }

}
<span><b>total:&nbsp;@db.Toys.Count()</b></span>
    @*@Html.ActionLink("Edit", "Edit", new { id = item.TypeOfToyID }) |
        @Html.ActionLink("Details", "Details", new { id = item.TypeOfToyID }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.TypeOfToyID })*@


@*@{
    //var toys = db.Toys.ToList();
    var toyInDb = db.Toys.GroupBy(t => t.TypeOfToyID);
    foreach (var t in toyInDb)
    {

    }

}
<span><b>total:&nbsp;@db.Toys.Count()</b></span>*@