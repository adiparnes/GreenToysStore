@model GreenToys.ViewModel.ToyRentalViewModel
@using GreenToys.Utility
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>New Toy Rental</h3>
        <hr/>
        @Html.ValidationSummary(true,"",new { @class="text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new {id="email" ,@class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameOfToy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.NameOfToy, new { id = "ToyName", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NameOfToy, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--toyid????-->
        <div class="form-group">
            @Html.LabelFor(model => model.ForAge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ForAge, new { id = "ForAge", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ForAge, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            List<SelectListItem> listItem = new List<SelectListItem>();
            listItem.Add(new SelectListItem
            {
                Text = StatisDetails.OneMonth,
                Value = StatisDetails.OneMonthCount
            });
        }

        <div class="form-group">
            @Html.LabelFor(model => model.RentalDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RentalDuration,listItem, new {id="ddlRentalDuration" ,@class = "form-control"  })
                @Html.ValidationMessageFor(model => model.RentalDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="nameAndDob" style="display:none">

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new {id="firstName",style="width:350px", @class = "form-control"  })                 
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "BirthDate", style = "width:350px", @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ToyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "lblToyPrice", style = "width:350px", @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Avaibility, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "lblAvaibility", style = "width:350px", @class = "form-control" })
                </div>
            </div>


           
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Chack Avaibility" id="btnAvaibility" class="btn btn-sm btn-success" />
                <input type="submit" value="Reserve" id="btnSubmit" style="display:none;" class="btn btn-sm btn-success" />

            </div>
        </div>

    </div>
            }
@section scripts{
    <script>
        $(document).ready(function () {

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('email'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/API/UsersApi?type=email&query=%QUERY',
                    wildcard:'%QUERY'
                }
            });

            $('#email').typeahead({
              
                highlight: true,
                minLength: 3
            },
            {
                name: 'customers',
                display:'Email',
                source: customers
            });

            var ToyName = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('ToyName'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/Api/ToyApi?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#ToyName').typeahead({

                highlight: true,
                minLength: 3
            },
            {
                name: 'ToyName',
                display: 'NameOfToy',
                source: ToyName
            });
        });

        $('#btnAvaibility').click(function () {
            var name = document.getElementById("ToyName").value;
            var forAge = document.getElementById("ForAge").value;
            var rentalDuration = document.getElementById("ddlRentalDuration").value;
            var email = document.getElementById("email").value;

            $.ajax({

                url: '/api/ToyApi?type=avail&name=' + name,
                type: 'Get',
                dataType: 'json',
                success: function (data, textStatus, xhr) {

                    $('#lblAvaibility').text(data+' available')
                    if (data > 0)
                    {
                        document.getElementById('btnSubmit').style.display = '';
                    }
                    else
                    {
                        document.getElementById('btnSubmit').style.display = '';
                        document.getElementById('btnSubmit').value = "Not Available";
                        document.getElementById('btnSubmit').display = true;
                        document.getElementById('btnSubmit').classList.remove = "btn-success";
                        document.getElementById('btnSubmit').classList.add = "btn-danger";
                    }

                },
                error: function (xhr, textStatus, errorThrown) {

                }

            });
            //name email rentalduration
            $.ajax({

                url: '/api/ToyApi?type=price&name=' + name + '&rentalDuration=' + rentalDuration + '&email=' + email,
                type: 'Get',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    $('#lblToyPrice').text(data);
                },
                error: function (xhr, textStatus, errorThrown) {
                }            
            });

            $.ajax({

                url: '/api/UsersApi?type=name&query='+ email,
                type: 'Get',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    var fields = data.split(';');
                    $('#firstName').text(fields[0])
                    

                    var BirthDate = fields[1].split(' ')
                    $('#BirthDate').text(BirthDate[1])

                    document.getElementById("btnAvaibility").style.display = 'none';
                    document.getElementById("nameAndDob").style.display = '';

                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });



        });






    </script>
    
    
    
    
    }
